version: '3.3'
services:
  db:
    image: postgres:13-alpine
    container_name: pheno-ranker-db
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PW}
    restart: unless-stopped
    healthcheck:
      test: pg_isready -U postgres
    networks:
      - shiny-net

  proxy:
    container_name: nginx-proxy
    image: nginx:1.25.1-alpine
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx_mountpoint/templates:/etc/nginx/templates:ro
      - ./nginx_mountpoint/includes:/etc/nginx/includes:ro
      - ./nginx_mountpoint/logs:/var/log/nginx
      - ./nginx_mountpoint/certs/${DOMAIN}.pem:/etc/nginx/${DOMAIN}.pem:ro
      - ./nginx_mountpoint/certs/${DOMAIN}-key.pem:/etc/nginx/${DOMAIN}-key.pem:ro
    networks:
      - shiny-net

  shinyproxy:
    image: openanalytics/shinyproxy:3.0.1
    container_name: shinyproxy
    # user: root
    ports:
      - 3830:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./shinyproxy/application.yml:/opt/shinyproxy/application.yml:ro
      - ./shinyproxy/shinyproxy.log:/opt/shinyproxy/shinyproxy.log:rw
    group_add:
      - "991" # getent group docker | cut -d: -f3
    networks:
      - shiny-net

  keycloak-db:
    image: postgres:13-alpine
    container_name: kc-db
    environment:
      POSTGRES_DB: ${KC_DB}
      POSTGRES_USER: ${KC_DB_USER}
      POSTGRES_PASSWORD: ${KC_DB_PW}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "psql -U $KC_DB_USER -d $KC_DB -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.1
    depends_on:
      - keycloak-db
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: ${KC_DB_USER}
      DB_PASSWORD: ${KC_DB_PW}
      KEYCLOAK_ADMIN: ${KC_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PW}
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_PATH: /auth
      KC_HOSTNAME_URL: https://${DOMAIN}/auth/
      KC_HOSTNAME_ADMIN_URL: https://${DOMAIN}/auth/
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem
      KC_HEALTH_ENABLED: true
    volumes:
      - type: bind
        source: ./realm-export.json
        target: /opt/keycloak/data/import/realm-export.json
      - type: bind
        source: ./nginx_mountpoint/certs/${DOMAIN}.pem
        target: /opt/keycloak/conf/server.crt.pem
        read_only: true
      - type: bind
        source: ./nginx_mountpoint/certs/${DOMAIN}-key.pem
        target: /opt/keycloak/conf/server.key.pem
        read_only: true
    restart: unless-stopped
    command: ${KC_CMD}
    healthcheck:
      test: curl localhost:8080/health | grep -q "UP"
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - shiny-net

volumes:
  postgres-data:
  shiny-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  shiny-config:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/config
      o: bind

networks:
  shiny-net:
